class Solution {
    public static int balanceSums(int[][] mat) {
        int n = mat.length;
        int[] rowSum = new int[n];
        int[] colSum = new int[n];
        int maxSum = 0;

        // Step 1: Calculate sum of each row and each column
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                rowSum[i] += mat[i][j];
                colSum[j] += mat[i][j];
            }
        }

        // Step 2: Find the maximum sum among all rows and columns
        for (int i = 0; i < n; i++) {
            maxSum = Math.max(maxSum, rowSum[i]);
            maxSum = Math.max(maxSum, colSum[i]);
        }

        // Step 3: Calculate total sum of the matrix
        int totalSum = 0;
        for (int i = 0; i < n; i++) {
            totalSum += rowSum[i];
        }

        // Step 4: Total operations needed to make all rows and columns equal to maxSum
        return maxSum * n - totalSum;
    }
}
