class Solution {
    int getLPSLength(String s) {
        int n = s.length();
        int[] lps = new int[n];  // lps[i] = length of longest prefix-suffix for s[0..i]
        
        int len = 0;  // length of the previous longest prefix-suffix
        int i = 1;    // start checking from the second character

        while (i < n) {
            if (s.charAt(i) == s.charAt(len)) {
                len++;
                lps[i] = len;
                i++;
            } else {
                if (len != 0) {
                    // fallback to the previous possible prefix length
                    len = lps[len - 1];
                } else {
                    lps[i] = 0;
                    i++;
                }
            }
        }

        // The last value in lps[] is the answer
        return lps[n - 1];
    }
}
