/*
class Node {
    int data;
    Node left;
    Node right;
    Node(int data) {
        this.data = data;
        left = null;
        right = null;
    }
}
*/

class Solution {
    int moves; // global counter to store total moves

    public int distCandy(Node root) {
        moves = 0;
        dfs(root);
        return moves;
    }

    private int dfs(Node root) {
        if (root == null) return 0;

        int left = dfs(root.left);   // balance from left subtree
        int right = dfs(root.right); // balance from right subtree

        // total moves are absolute values of candies transferred
        moves += Math.abs(left) + Math.abs(right);

        // return net balance of candies for this node
        return root.data + left + right - 1;
    }
}
